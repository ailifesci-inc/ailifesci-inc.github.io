name: Build frontend site and deploy to GitHub Pages

on:
  push: # Runs on pushes targeting the default branch
    branches: ["main"]

  pull_request: # Runs on pull requests that targeting the default branch
    branches: ["main"]

  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  CNAME: ${{ vars.CNAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub Source Code
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.SRC_GITHUB_REPO }}
          token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
          lfs: true

      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: pnpm

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # Automatically inject basePath in your Next.js configuration file and disable server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          # Remove this line if you want to manage the configuration yourself.
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml', '**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml', '**/package-lock.json', '**/yarn.lock') }}-

      - run: pnpm install --no-frozen-lockfile
      - run: pnpm next build
      - run: |
          echo "Generate CNAME file: ${CNAME}" && echo ${CNAME:-"example.com"} > ./out/CNAME

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy: # Deployment job
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
